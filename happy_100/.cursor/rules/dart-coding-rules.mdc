---
description: 
globs: 
alwaysApply: true
---
---
description: Dart 코딩 지침
globs: *
---

# 언어 지침
- 영어만 사용하여 코드를 작성합니다.
- 문서와 주석은 기본으로 한글로 작성하며 한글 표기 불가능하면 영어로 작성합니다.

# Dart 코딩 지침
- 클린 아키텍처를 사용합니다.
- 모든 변수 및 함수(매개변수 및 반환 값)의 유형을 항상 선언합니다.
- 파일 당 하나의 export만 합니다.
- 환경 변수에는 UPPERCASE를 사용합니다.
- 매직 넘버를 피하고 상수를 정의합니다.
- 각 함수를 동사로 시작합니다.
- 짧은 함수를 작성하고 단일 목적을 갖습니다 (20개 미만의 명령).
- 블록 중첩을 피합니다.
- 고차 함수(map, filter, reduce 등)를 사용하여 함수 중첩을 피합니다.
- nullable 변수를 가능한 사용하지 않습니다.
- null 또는 undefined를 확인하는 대신 기본 매개변수 값을 사용합니다.
- RO-RO 패턴을 사용하여 함수 매개변수를 줄입니다.
- 단일 수준의 추상화를 사용합니다.
- 기본 유형을 남용하지 말고 데이터를 복합 유형으로 캡슐화합니다.
- 함수에서 데이터 유효성 검사를 피하고 내부 유효성 검사가 있는 클래스를 사용합니다.
- 데이터에 불변성을 선호합니다.
- SOLID 원칙을 따릅니다.
- 상속보다 구성을 선호합니다.
- 단일 목적을 가진 작은 클래스를 작성합니다.
- 예외를 사용하여 예상하지 못한 오류를 처리합니다.

# Dart 테스트 지침
- 각 public 함수에 대한 단위 테스트를 작성합니다.
- 테스트에 Arrange-Act-Assert 규칙을 따릅니다.
- 테스트 변수 이름을 명확하게 지정합니다.
- 테스트 커버리지 도구를 사용합니다.

# Dart Style Guide
- 들여쓰기는 스페이스 2칸을 사용해야 합니다.
- 한 줄의 길이는 최대 80자로 제한합니다.
- 컬렉션 리터럴, 파라미터 목록 등에서 쉼표 뒤에는 하나의 공백을 추가해야 합니다.
- 컬렉션 리터럴 및 파라미터 목록의 마지막 항복 뒤에 쉼표를 허용합니다.
- import 구문은 dart:, pakcage: 순서로 정렬해야 합니다.
- 파일 및 디렉토리 이름에는 underscores_case를 사용합니다.
- 클래스에는 PascalCase를 사용합니다.
- 상수 이름은 lowerCamelCase를 사용합니다.
- 변수, 함수 및 메서드에는 lowerCamelCase를 사용합니다.
- bool 변수에는 동사를 사용합니다 (예: isLoading, hasError).
- 약어 대신 완전한 단어를 사용하고 철자를 수정합니다.
- var 키워드를 사용합니다.
- 변수가 변경 가능성이 없다면 final 키워드를 사용합니다.
- dynamic 타입 사용은 가능한 한 피하고 구체적인 타입을 명시합니다.
- 비동기 프로그래밍에는 async 및 await를 사용합니다.
- 발생 가능한 예외는 try, catch 블록으로 처리합니다.
